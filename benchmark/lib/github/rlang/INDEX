abort                   Signal an error, warning, or message
arg_match               Match an argument to a character vector
as_box                  Convert object to a box
as_data_mask            Create a data mask
as_environment          Coerce to an environment
as_function             Convert to function or closure
as_label                Create a default name for an R object
as_name                 Extract names from symbols
as_quosure              Coerce object to quosure
as_string               Cast symbol to string
bare-type-predicates    Bare type predicates
box                     Box a value
call2                   Create a call
call_args               Extract arguments from a call
call_fn                 Extract function from a call
call_inspect            Inspect a call
call_modify             Modify the arguments of a call
call_name               Extract function name or namespace of a call
call_standardise        Standardise a call
caller_env              Get the current or caller environment
catch_cnd               Catch a condition
cnd_message             Build an error message from parts
cnd_signal              Signal a condition object
done                    Box a final value for early termination
dyn-dots                Dynamic dots
empty_env               Get the empty environment
enquo0                  Defuse arguments without automatic injection
entrace                 Add backtrace from error handler
env                     Create a new environment
env_bind                Bind symbols to objects in an environment
env_browse              Browse environments
env_clone               Clone an environment
env_depth               Depth of an environment chain
env_get                 Get an object in an environment
env_has                 Does an environment have or see bindings?
env_inherits            Does environment inherit from another
                        environment?
env_name                Label of an environment
env_names               Names and numbers of symbols bound in an
                        environment
env_parent              Get parent environments
env_poke                Poke an object in an environment
env_print               Pretty-print an environment
env_unbind              Remove bindings from an environment
eval_bare               Evaluate an expression in an environment
eval_tidy               Evaluate an expression with quosures and
                        pronoun support
exec                    Execute a function
expr_interp             Process unquote operators in a captured
                        expression
expr_label              Turn an expression to a label
expr_print              Print an expression
exprs_auto_name         Ensure that all elements of a list of
                        expressions are named
f_rhs                   Get or set formula components
f_text                  Turn RHS of formula into a string or label
faq-options             Global options for rlang
fn_body                 Get or set function body
fn_env                  Return the closure environment of a function
fn_fmls                 Extract arguments from a function
format_error_bullets    Format bullets for error messages
get_env                 Get or set the environment of an object
has_name                Does an object have an element with this name?
hash                    Hash an object
inherits_any            Does an object inherit from a set of classes?
inject                  Inject objects in an R expression
is_call                 Is object a call?
is_empty                Is object an empty vector or NULL?
is_environment          Is object an environment?
is_expression           Is an object an expression?
is_formula              Is object a formula?
is_function             Is object a function?
is_installed            Are packages installed in any of the libraries?
is_integerish           Is a vector integer-like?
is_interactive          Is R running interactively?
is_named                Is object named?
is_namespace            Is an object a namespace environment?
is_symbol               Is object a symbol?
is_true                 Is object identical to TRUE or FALSE?
is_weakref              Is object a weak reference?
last_error              Last 'abort()' error
list2                   Collect dots in a list
local_bindings          Temporarily change bindings of an environment
local_options           Change global options
missing_arg             Generate or handle a missing argument
names2                  Get names of a vector
new_formula             Create a formula
new_function            Create a function
new_quosures            Create a list of quosures
new_weakref             Create a weak reference
nse-defuse              Defuse R expressions
nse-force               Force parts of an expression
op-get-attr             Infix attribute accessor and setter
op-na-default           Replace missing values
op-null-default         Default value for 'NULL'
pairlist2               Create pairlists with splicing support
parse_expr              Parse R code
quo_label               Format quosures for printing or labelling
quo_squash              Squash a quosure
quosure                 Quosure getters, setters and testers
raw_deparse_str         Serialize a raw vector to a string
rep_along               Create vectors matching the length of a given
                        vector
rlang_backtrace_on_error
                        Display backtrace on error
scalar-type-predicates
                        Scalar type predicates
scoped_interactive      Questioning 'scoped_' functions
seq2                    Increasing sequence of integers in an interval
set_expr                Set and get an expression
set_names               Set names of a vector
sym                     Create a symbol or list of symbols
tidyeval-data           Data pronouns for tidy evaluation
trace_back              Capture a backtrace
type-predicates         Type predicates
vector-construction     Create vectors
with_abort              Promote all errors to rlang errors
with_handlers           Establish handlers on the stack
wref_key                Get key/value from a weak reference object
zap                     Create zap objects
zap_srcref              Zap source references
