on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
#          - {os: macOS-latest,   r: 'devel'}
          - {os: macOS-latest,   r: '4.0'}
          - {os: windows-latest, r: '4.0'}
          - {os: ubuntu-16.04,   r: '4.0', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04,   r: '3.6', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04,   r: '3.5', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04,   r: '3.4', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
#          - {os: ubuntu-16.04,   r: '3.3', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

     # installing older versions of packages not supported on newer versions of R
      - name: Install historical dependencies
        run: Rscript -e "r_version <- strsplit(version[['version.string']], split=' ')[[1]][3]"
                     -e "print(r_version)"
                     -e "if (r_version < '3.6') remotes::install_version('latticeExtra', version = '0.6-28', repos = 'https://cran.rstudio.com/')"
                     -e "if (r_version < '3.6') remotes::install_version('pbkrtest', version = '0.4-7', repos = 'https://cran.rstudio.com/')"
                     -e "if (r_version < '3.5') remotes::install_version('geepack', version = '1.2-1', repos = 'https://cran.rstudio.com/')"
                     -e "if (r_version < '3.5') remotes::install_version('car', version = '3.0-2', repos = 'https://cran.rstudio.com/')"
                     -e "if (r_version < '3.4') remotes::install_version('survival', version = '2.44-1.1', repos = 'https://cran.rstudio.com/')"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
