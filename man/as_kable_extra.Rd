% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_kable_extra.R
\name{as_kable_extra}
\alias{as_kable_extra}
\title{Convert gtsummary object to a kableExtra object}
\usage{
as_kable_extra(
  x,
  format = ifelse(knitr::is_latex_output(), "latex", "html"),
  escape = TRUE,
  ...,
  include = everything(),
  return_calls = FALSE
)
}
\arguments{
\item{x}{Object created by a function from the gtsummary package
(e.g. \link{tbl_summary} or \link{tbl_regression})}

\item{format, escape, ...}{arguments passed to \code{knitr::kable()}}

\item{include}{Commands to include in output. Input may be a vector of
quoted or unquoted names. tidyselect and gtsummary select helper
functions are also accepted.
Default is \code{everything()}.}

\item{return_calls}{Logical. Default is \code{FALSE}. If \code{TRUE}, the calls are returned
as a list of expressions.}
}
\value{
A {kableExtra} table
}
\description{
Function converts a gtsummary object to a knitr_kable + kableExtra object.
This allows the customized formatting available via \link[knitr:kable]{knitr::kable}
and {kableExtra}; \code{as_kable_extra()} supports arguments in \code{knitr::kable()}.
\code{as_kable_extra()} output via gtsummary supports
bold and italic cells for table bodies. Users
creating pdf output should specify \code{as_kable_extra(format = "latex")}. Users
are encouraged to leverage \code{as_kable_extra()} for enhanced pdf printing; for html
output options there is better support via \code{as_gt()}.
}
\section{PDF via LaTeX Tips}{


This section discusses options intended for use with
\itemize{
\item \code{output: pdf_document} in yaml of \code{.Rmd}.
\item \code{as_kable_extra(format = "latex", escape = FALSE)}
}

The above settings in your R markdown document automatically renders LaTeX
typesetting instructions via {kableExtra} in your pdf for the following:
\itemize{
\item Markdown bold, italic, and underline syntax in the headers will be converted to LaTeX
\item Special characters in the table body will be escaped
\item The \code{"\\n"} symbol will be recognized as a line break in the table headers
}

\code{escape} informs if special characters should be escaped when {gtsummary}
automatically renders LaTeX typesetting instructions via {kableExtra}.
\code{escape = FALSE} is required to take advantage of the above styling conveniences;
however, it is possible that other unanticipated special characters could prohibit
rendering of the pdf with this option.

Additional styling is available with
\code{kableExtra::kable_styling()} as shown in Example 3, which implements row
striping and repeated column headers in the presence of page breaks.
}

\section{Example Output}{

\if{html}{Example 1 (html)}

\if{html}{\figure{as_kable_extra_ex1_html.png}{options: width=40\%}}

\if{html}{Example 1 (pdf)}

\if{html}{\figure{as_kable_extra_ex1_pdf.png}{options: width=40\%}}

\if{html}{Example 2 (pdf)}

\if{html}{\figure{as_kable_extra_ex2_pdf.png}{options: width=40\%}}

\if{html}{Example 3 (pdf)}

\if{html}{\figure{as_kable_extra_ex3_pdf.png}{options: width=40\%}}
}

\examples{
\dontshow{if (broom.helpers::.assert_package("kableExtra", boolean = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
\donttest{
# Example 1 (general) -------------------------------------------------------
as_kable_extra_ex1_gen <-
  trial \%>\%
  select(trt, age, stage) \%>\%
  tbl_summary(by = trt) \%>\%
  bold_labels() \%>\%
  as_kable_extra()

# Example 2 (PDF via LaTeX) -------------------------------------------------
as_kable_extra_ex2_pdf <-
  trial \%>\%
  select(trt, age, stage) \%>\%
  tbl_summary(by = trt) \%>\%
  bold_labels() \%>\%
  modify_header(all_stat_cols() ~ "**{level}**\n*N = {n}*") \%>\%
  as_kable_extra(format = "latex", escape = FALSE)

# Example 3 (PDF via LaTeX) -------------------------------------------------
as_kable_extra_ex3_pdf <-
  trial \%>\%
  select(trt, age, stage) \%>\%
  tbl_summary(by = trt) \%>\%
  bold_labels() \%>\%
  as_kable_extra(
    format = "latex",
    escape = FALSE,
    booktabs = TRUE,
    longtable = TRUE,
    linesep = ""
  ) \%>\%
  kableExtra::kable_styling(
    position = "left",
    latex_options = c("striped", "repeat_header"),
    stripe_color = "gray!15"
  )
}
\dontshow{\}) # examplesIf}
}
\seealso{
Other gtsummary output types: 
\code{\link{as_flex_table}()},
\code{\link{as_gt}()},
\code{\link{as_hux_table}()},
\code{\link{as_kable}()},
\code{\link{as_tibble.gtsummary}()}
}
\author{
Daniel D. Sjoberg
}
\concept{gtsummary output types}
