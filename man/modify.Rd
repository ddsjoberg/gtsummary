% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify.R
\name{modify}
\alias{modify}
\alias{modify_header}
\alias{modify_footnote}
\alias{modify_spanning_header}
\title{Modify column headers, footnotes, and spanning headers}
\usage{
modify_header(x, ..., text_interpret = c("md", "html"), quiet, update)

modify_footnote(
  x,
  ...,
  abbreviation = FALSE,
  text_interpret = c("md", "html"),
  update,
  quiet
)

modify_spanning_header(x, ..., text_interpret = c("md", "html"), quiet, update)
}
\arguments{
\item{x}{(\code{gtsummary})\cr
A gtsummary object}

\item{...}{\code{\link[rlang:dyn-dots]{dynamic-dots}}\cr
Used to assign updates to headers,
spanning headers, and footnotes.

Use \code{modify_*(colname='new header/footnote')} to update a single column. Using a
formula will invoke tidyselect, e.g. \code{modify_*(all_stat_cols() ~ "**{level}**")}.
The dynamic dots allow syntax like \code{modify_header(x, !!!list(label = "Variable"))}.
See examples below.

TODO: Add link when the function below is added.
Use the \code{show_header_names()} to see the column names that can be modified.}

\item{text_interpret}{(\code{string})\cr
String indicates whether text will be interpreted with
\code{\link[gt:md]{gt::md()}} or \code{\link[gt:html]{gt::html()}}. Must be \code{"md"} (default) or \code{"html"}.}

\item{update, quiet}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}}

\item{abbreviation}{(scalar \code{logical})\cr
Logical indicating if an abbreviation is being updated.}
}
\value{
Updated gtsummary object
}
\description{
These functions assist with modifying the aesthetics/style of a table.
\itemize{
\item \code{modify_header()} update column headers
\item \code{modify_footnote()} update/add table footnotes
\item \code{modify_spanning_header()} update/add spanning headers
}

The functions often require users to know the underlying column names.
Run \code{show_header_names()} to print the column names to the console.
}
\section{\code{tbl_summary()}, \code{tbl_svysummary()}, and \code{tbl_cross()}}{

When assigning column headers, footnotes, and spanning headers,
you may use \code{{N}} to insert the number of observations.
\code{tbl_svysummary} objects additionally have \code{{N_unweighted}} available.

When there is a stratifying \verb{by=} argument present, the following fields are
additionally available to stratifying columns: \code{{level}}, \code{{n}}, and \code{{p}}
(\code{{n_unweighted}} and \code{{p_unweighted}} for \code{tbl_svysummary} objects)

Syntax follows \code{\link[glue:glue]{glue::glue()}}, e.g. \code{all_stat_cols() ~ "**{level}**, N = {n}"}.
}

\section{tbl_regression()}{

When assigning column headers for \code{tbl_regression} tables,
you may use \code{{N}} to insert the number of observations, and \code{{N_event}}
for the number of events (when applicable).
}

\examples{
# create summary table
tbl <- trial |>
  tbl_summary(by = trt, missing = "no", include = c("age", "grade", "trt")) |>
  add_p()

# print the column names that can be modified
# TODO: Add this back in after function is added
# show_header_names(tbl)

# Example 1 ----------------------------------
# updating column headers and footnote
tbl |>
  modify_header(label = "**Variable**", p.value = "**P**") |>
  modify_footnote(all_stat_cols() ~ "median (IQR) for Age; n (\%) for Grade")

# Example 2 ----------------------------------
# updating headers, remove all footnotes, add spanning header
tbl |>
  modify_header(all_stat_cols() ~ "**{level}**, N = {n} ({style_percent(p)}\%)") |>
  modify_footnote(everything() ~ NA) |>
  modify_spanning_header(all_stat_cols() ~ "**Treatment Received**")

# Example 3 ----------------------------------
# updating an abbreviation in table footnote
glm(response ~ age + grade, trial, family = binomial) |>
  tbl_regression(exponentiate = TRUE) |>
  modify_footnote(conf.low = "CI = Credible Interval", abbreviation = TRUE)
}
\author{
Daniel D. Sjoberg
}
